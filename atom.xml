<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Haskell without remorse</title>
    <link href="http://ncrashed.github.io/blog/atom.xml" rel="self" />
    <link href="http://ncrashed.github.io/blog" />
    <id>http://ncrashed.github.io/blog/atom.xml</id>
    <author>
        <name>Anton Gushcha</name>
        <email>ncrashed@gmail.com</email>
    </author>
    <updated>2016-10-22T00:00:00Z</updated>
    <entry>
    <title>Lets make Minecraft mod on Haskell</title>
    <link href="http://ncrashed.github.io/blog/posts/2016-10-22-ghcvm-minecraft-modding.html" />
    <id>http://ncrashed.github.io/blog/posts/2016-10-22-ghcvm-minecraft-modding.html</id>
    <published>2016-10-22T00:00:00Z</published>
    <updated>2016-10-22T00:00:00Z</updated>
    <summary type="html"><![CDATA[GHCVM (JVM backend for GHC) is now ready to be used for Minecraft moding. The post will tell you how to setup minimum development environment for Haskell based mod.]]></summary>
</entry>
<entry>
    <title>HSOC evaluation for live profiling server</title>
    <link href="http://ncrashed.github.io/blog/posts/2016-09-11-hsoc-results.html" />
    <id>http://ncrashed.github.io/blog/posts/2016-09-11-hsoc-results.html</id>
    <published>2016-09-11T00:00:00Z</published>
    <updated>2016-09-11T00:00:00Z</updated>
    <summary type="html"><![CDATA[The summer was awesome, I finally pushed the HSOC "Live profiling and performance monitoring server" project to consistent state. Almost all features are implemented and changes to GHC are submitted to Phabricator.]]></summary>
</entry>
<entry>
    <title>Live profile monitor</title>
    <link href="http://ncrashed.github.io/blog/posts/2016-07-20-hsoc-monitoring-library.html" />
    <id>http://ncrashed.github.io/blog/posts/2016-07-20-hsoc-monitoring-library.html</id>
    <published>2016-07-20T00:00:00Z</published>
    <updated>2016-07-20T00:00:00Z</updated>
    <summary type="html"><![CDATA[Another big chunk of work is done for my HSOC project - live-profile-monitor which transfers events to remote profiling tool.]]></summary>
</entry>
<entry>
    <title>Live profiling RTS progress</title>
    <link href="http://ncrashed.github.io/blog/posts/2016-06-22-hsoc-rts.html" />
    <id>http://ncrashed.github.io/blog/posts/2016-06-22-hsoc-rts.html</id>
    <published>2016-06-22T00:00:00Z</published>
    <updated>2016-06-22T00:00:00Z</updated>
    <summary type="html"><![CDATA[During the last week I was implementing base RTS features to support live event logging in GHC. I tried several design choices for eventlog piping to Haskell side, some of them being tempting leads to non-obvious problems with multithreaded environment or causes deadlocks. As a result, RTS now can redirect events into user specified file descriptor and pipe them via extendable memory buffer.]]></summary>
</entry>
<entry>
    <title>Live profiling and performance monitoring server</title>
    <link href="http://ncrashed.github.io/blog/posts/2016-06-12-hsoc-acceptance.html" />
    <id>http://ncrashed.github.io/blog/posts/2016-06-12-hsoc-acceptance.html</id>
    <published>2016-06-12T00:00:00Z</published>
    <updated>2016-06-12T00:00:00Z</updated>
    <summary type="html"><![CDATA[HSOC has suddenly received additional funding and my project of improving GHC event logging experience now is among the chosen ones. The post contains the full proposal description and info about mentors.]]></summary>
</entry>

</feed>
